version: 2.1

commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run:
          name: "my test commad"
          command: |
            echo My rukee pipeline id is << pipeline.id >> and my git branch is << pipeline.git.branch >>
            echo $CIRCLE_WORKFLOW_ID

jobs:
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  test_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          to: "hello"
  # testing a job that will fail...
  a_job_to_test_failing:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Testing application
          command: make test
          shell: /bin/bash
          working_directory: ~/my-app
          no_output_timeout: 30m
          environment:
            FOO: bar
      - run: echo 127.0.0.1 devhost | sudo tee -a /etc/hosts
      - run: |
          sudo -u root createuser -h localhost --superuser ubuntu &&
          sudo createdb -h localhost test_db
      - run:
          name: Upload Failed Tests
          command: curl --data fail_tests.log http://example.com/error_logs
          when: on_fail

workflows:
  my_workflow:
    jobs:
      - test_command
      - save_hello_world_output
      - a_job_to_test_failing
      - print_output_file:
          requires:
            - save_hello_world_output
